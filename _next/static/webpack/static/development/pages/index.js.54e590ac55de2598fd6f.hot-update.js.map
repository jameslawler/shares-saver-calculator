{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.54e590ac55de2598fd6f.hot-update.js","sources":["webpack:///./services/calculatorService.js"],"sourcesContent":["const getDividend = (dividends, date) =>\n  dividends && dividends.find(div => div[0] === date);\n\nconst calculate = (fund, monthlyContribution) => {\n  const { prices, dividends, entryFee, totalExpenseRatio } = fund;\n  const monthlyDeposit = monthlyContribution * ((100 - entryFee) / 100);\n  let totalDeposited = 0;\n  let totalShares = 0;\n\n  prices.forEach(price => {\n    const date = new Date(price[0]);\n    const amount = price[1];\n    const sharesToBuy = monthlyDeposit / amount;\n  \n    totalDeposited += monthlyDeposit;\n    totalShares += sharesToBuy;\n  \n    const dividend = getDividend(dividends, price[0]);\n  \n    if (dividend) {\n      const dividendAmount = dividend[1] * totalShares;\n      const dividendShares = dividendAmount / amount;\n      totalShares += dividendShares;\n      console.log(`Added ${dividendShares} dividend shares (${dividendShares * amount} euros)`);\n    }\n  \n    if (date.getDate() === 1) {\n      console.log(\n        `${date.toISOString()} -> ${sharesToBuy} -> ${totalShares} -> ${totalDeposited} -> ${totalShares * amount} -> ${(totalShares * amount) / totalDeposited * 100}`\n      );\n    }\n  \n    if (date.getMonth() === 0) {\n      console.log(`Management fee paid ${totalShares * (totalExpenseRatio / 100)} shares`);\n      totalShares *= ((100 - totalExpenseRatio) / 100);\n    }\n  });\n}\n\nexport default {\n  calculate,\n};\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AACA;AAAA;AADA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;;;;A","sourceRoot":""}