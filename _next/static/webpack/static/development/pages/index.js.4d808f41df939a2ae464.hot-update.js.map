{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.4d808f41df939a2ae464.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Head from 'next/head';\n\nimport data from '../data';\n\nimport calculatorService from '../services/calculatorService';\n\nconst numberWithCommas = (number) => number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n\nconst Home = () => {\n  const [monthlyDeposit, setMonthlyDeposit] = useState(100);\n  const [calculations, setCalculations] = useState([]);\n\n  return (\n    <div>\n      <Head>\n        <title>Shares Saver Calculator</title>\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n      </Head>\n\n      <div className=\"container\">\n        <h1 className=\"title\">Shares Saver Calculator</h1>\n        <div className=\"detailsContainer\">\n          <span className=\"detailsHeadline\">Fund Details</span>\n          <div><b>Name: </b><span>{data.asx.name}</span></div>\n          <div><b>Entry Fee: </b><span>{data.asx.entryFee}%</span></div>\n          <div><b>Management Fee: </b><span>{data.asx.totalExpenseRatio}% p.a</span></div>\n        </div>\n        <div className=\"calculationSettings\">\n          <label>Monthly Contribution:</label>\n          <input type=\"number\" value={monthlyDeposit} onChange={(event) => setMonthlyDeposit(event.target.value)} />\n          <button onClick={() => setCalculations(calculatorService.calculate(data.asx, monthlyDeposit))}>\n            Calculate\n          </button>\n        </div>\n        { calculations.length > 0 &&\n          <table>\n            <tr>\n              <th>Date</th>\n              <th>Type</th>\n              <th>Shares Change</th>\n              <th>Total Shares</th>\n              <th>Total Deposited</th>\n              <th>Worth</th>\n              <th>Growth</th>\n            </tr>\n            { calculations.map(calculation =>\n            <tr className={calculation.type}>\n              <td>{calculation.date.toISOString().substr(0, 10)}</td>\n              <td>{calculation.type}{calculation.type === 'shares' ? ` @ ${calculation.shareAmount} euros` : ''}</td>\n              <td>{calculation.shareChange > 0 ? '+' : ''}{numberWithCommas(calculation.shareChange.toFixed(2))}</td>\n              <td>{numberWithCommas(calculation.totalShares.toFixed(2))}</td>\n              <td>{numberWithCommas(calculation.totalDeposited.toFixed(2))} euros</td>\n              <td>{numberWithCommas(calculation.worth.toFixed(2))} euros</td>\n              <td className={calculation.growth < 0 ? 'negative' : 'positive'}>{calculation.growth.toFixed(2)}%</td>\n            </tr>\n          )}\n          </table>\n        }\n      </div>\n      <style jsx>{`\n        .container {\n          display: flex;\n          flex-direction: column;\n          padding: 40px;\n          width: 900px;\n          color: #333;\n        }\n        .title {\n          margin: 0;\n          width: 100%;\n          line-height: 1.15;\n          font-size: 48px;\n        }\n        .title,\n        .description {\n          text-align: center;\n        }\n        .detailsContainer {\n          align-items: start;\n          display: flex;\n          flex-direction: column;\n        }\n        .detailsHeadline {\n          font-size: 20px;\n          font-weight: bold;\n          padding: 15px 0;\n        }\n        .calculationSettings {\n          padding: 15px 0;\n        }\n        .calculationSettings label {\n          padding-right: 10px;\n        }\n        .calculationSettings input {\n          margin-right: 10px;\n        }\n        tr:nth-child(even) {background: #CCC}\n        tr:nth-child(odd) {background: #FFF}\n        tr.management {\n          background: red;\n        }\n        tr.dividend {\n          background: lightblue;\n        }\n        td {\n          padding: 10px;\n        }\n        td.negative {\n          background: red;\n          font-weight: bold;\n        }\n        td.positive {\n          background: green;\n          color: white;\n          font-weight: bold;\n        }\n      `}</style>\n    </div>\n  );\n}\n\nexport default Home;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARA;AAhCA;AAAA;AAAA;AA0GA;AACA;AACA;;;;A","sourceRoot":""}