{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.b4b7152a2db3494902a6.hot-update.js","sources":["webpack:///./services/calculatorService.js"],"sourcesContent":["const getDividend = (dividends, date) =>\n  dividends && dividends.find(div => div[0] === date);\n\nconst calculate = (fund, monthlyContribution) => {\n  const { prices, dividends, entryFee, totalExpenseRatio } = fund;\n  const monthlyDeposit = monthlyContribution * ((100 - entryFee) / 100);\n  let totalDeposited = 0;\n  let totalShares = 0;\n  const calculations = [];\n\n  prices.forEach(price => {\n    const date = new Date(price[0]);\n    const amount = price[1];\n    const sharesToBuy = monthlyDeposit / amount;\n  \n    totalDeposited += monthlyDeposit;\n    totalShares += sharesToBuy;\n  \n    const dividend = getDividend(dividends, price[0]);\n  \n    if (dividend) {\n      const dividendAmount = dividend[1] * totalShares;\n      const dividendShares = dividendAmount / amount;\n      totalShares += dividendShares;\n      calculations.push({\n        type: 'dividend',\n        date,\n        shareChange: dividendShares,\n        totalShares,\n        totalDeposited,\n        worth: totalShares * amount,\n        growth: (totalShares * amount) / totalDeposited * 100 - 100,\n      });\n    }\n  \n    if (date.getDate() === 1) {\n      calculations.push({\n        type: 'shares',\n        date,\n        shareChange: sharesToBuy,\n        totalShares,\n        totalDeposited,\n        worth: totalShares * amount,\n        growth: (totalShares * amount) / totalDeposited * 100 - 100,\n      });\n    }\n  \n    if (date.getMonth() === 0) {\n      const managementFee = totalShares * (totalExpenseRatio / 100);\n      totalShares *= ((100 - totalExpenseRatio) / 100);\n      calculations.push({\n        type: 'management',\n        date,\n        shareChange: 0 - managementFee,\n        totalShares,\n        totalDeposited,\n        worth: totalShares * amount,\n        growth: (totalShares * amount) / totalDeposited * 100 - 100,\n      });\n    }\n  });\n\n  return calculations;\n}\n\nexport default {\n  calculate,\n};\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AACA;AAAA;AADA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AAEA;AACA;AACA;AACA;AACA;AADA;;;;A","sourceRoot":""}